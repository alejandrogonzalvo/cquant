@startuml Framework

package cquant {
    component [Logical OpenQASM3]
    component [Physical OpenQASM3]
    component [Mapping Pass]
    component [Visualization Pass1]
    component [Visualization Pass2]
    component [Target Generator]
}

package qunet {
    component [Python Architecture File]
    component [JSON Architecture File]
    component [JSON Generator]
}

package qiskit {
    component [Quantum Algorithm]
    component [Export Pass]
}

component [Python Architecture File]
component [JSON Architecture File]
component Netsquid


[Quantum Algorithm] -down-> [Export Pass] : " Input"
[Export Pass] -down-> [Logical OpenQASM3] : " Output"
[Logical OpenQASM3] -left-> [Visualization Pass1] : " Input"
[Visualization Pass1] -left-> [Logical Circuit Visualization] : " Output\t"
[Logical OpenQASM3] -down-> [Mapping Pass] : " Input"
[Mapping Pass] -down-> [Physical OpenQASM3] : " Output"
[Physical OpenQASM3] -left-> [Visualization Pass2] : " Input"
[Visualization Pass2] -left-> [Physical Circuit Visualization] : " Output\t"
[Python Architecture File] -down-> [JSON Generator] : " Input"
[JSON Generator] -down-> [JSON Architecture File] : " Output"
[JSON Architecture File] -left-> [Mapping Pass] : "\tInput\t"
[Physical OpenQASM3] -down-> [Target Generator] : " Input"
[Target Generator] -down--> Netsquid : " Output"


@enduml
